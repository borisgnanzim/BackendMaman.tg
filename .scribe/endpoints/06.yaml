name: 'User Management'
description: |-

  APIs to manage the User ressource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin.users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin.users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin.user.'
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin.users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nom:
        name: nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: pvg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      prenom:
        name: prenom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vsxvmzmghl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: parisian.tevin@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      adresse:
        name: adresse
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ycokowcrlqovtvseqgmkubkb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      telephone:
        name: telephone
        description: 'Must not be greater than 255 characters.'
        required: true
        example: cozzugyefe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      coordonne_geographique:
        name: coordonne_geographique
        description: 'Must not be greater than 255 characters.'
        required: false
        example: qc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_id:
        name: role_id
        description: 'Must not be greater than 255 characters.'
        required: false
        example: posrkbmllabndtlild
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: qnaanwrxyyxhakkynecfsjtmi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'gs{e/CbQpjqXjW'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      nom: pvg
      prenom: vsxvmzmghl
      email: parisian.tevin@example.com
      adresse: ycokowcrlqovtvseqgmkubkb
      telephone: cozzugyefe
      coordonne_geographique: qc
      role_id: posrkbmllabndtlild
      name: qnaanwrxyyxhakkynecfsjtmi
      password: 'gs{e/CbQpjqXjW'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin.users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin.user.'
        required: true
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: commodi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nom:
        name: nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tipnfr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      prenom:
        name: prenom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: qjgvtybrq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: terrell50@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      adresse:
        name: adresse
        description: 'Must not be greater than 255 characters.'
        required: false
        example: u
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      telephone:
        name: telephone
        description: 'Must not be greater than 255 characters.'
        required: true
        example: btxoudzs
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_id:
        name: role_id
        description: 'Must not be greater than 25.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: pfec
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      nom: tipnfr
      prenom: qjgvtybrq
      email: terrell50@example.com
      adresse: u
      telephone: btxoudzs
      role_id: 13
      name: pfec
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin.users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin.user.'
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: officiis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
