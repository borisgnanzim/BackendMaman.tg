## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  APIs to manage the User ressource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin.users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin.users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin.user.'
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: temporibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin.users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nom:
        name: nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: jpxvnvqigf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      prenom:
        name: prenom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: sevlowhnceizaquyht
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: dulce.schultz@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      adresse:
        name: adresse
        description: 'Must not be greater than 255 characters.'
        required: false
        example: yuqutfoklsnmozizxxsdjic
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      telephone:
        name: telephone
        description: 'Must not be greater than 255 characters.'
        required: true
        example: zuftnxvb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      coordonne_geographique:
        name: coordonne_geographique
        description: 'Must not be greater than 255 characters.'
        required: false
        example: atsnssz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_id:
        name: role_id
        description: 'Must not be greater than 255 characters.'
        required: false
        example: cukrfoncrxyq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: qzilswq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'R"r7e''GLmFjsJyfO]q'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      nom: jpxvnvqigf
      prenom: sevlowhnceizaquyht
      email: dulce.schultz@example.net
      adresse: yuqutfoklsnmozizxxsdjic
      telephone: zuftnxvb
      coordonne_geographique: atsnssz
      role_id: cukrfoncrxyq
      name: qzilswq
      password: 'R"r7e''GLmFjsJyfO]q'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin.users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin.user.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nom:
        name: nom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: odmwxmwhpxakf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      prenom:
        name: prenom
        description: 'Must not be greater than 255 characters.'
        required: true
        example: bxznlsolxatjbpcxst
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: rowland73@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      adresse:
        name: adresse
        description: 'Must not be greater than 255 characters.'
        required: false
        example: irmwwmwanlajojymbnp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      telephone:
        name: telephone
        description: 'Must not be greater than 255 characters.'
        required: true
        example: zyo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      coordonne_geographique:
        name: coordonne_geographique
        description: 'Must not be greater than 255 characters.'
        required: false
        example: whvpkeadwwai
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_id:
        name: role_id
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dcxy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: bdseuwzsvrfqmljayyt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      nom: odmwxmwhpxakf
      prenom: bxznlsolxatjbpcxst
      email: rowland73@example.com
      adresse: irmwwmwanlajojymbnp
      telephone: zyo
      coordonne_geographique: whvpkeadwwai
      role_id: dcxy
      name: bdseuwzsvrfqmljayyt
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin.users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User ressource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the admin.user.'
        required: true
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: commodi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
